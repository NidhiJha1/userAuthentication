{"version":3,"sources":["components/Auth/AuthForm.module.css","components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","logoutTimer","AuthContext","React","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","AuthContextProvider","props","initialToken","tokenData","stotedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","retrieveStoredToken","useState","setToken","userIsLoggedIn","logoutHandler","useCallback","clearInterval","useEffect","console","log","setTimeout","contextValue","setItem","Provider","value","children","MainNavigation","authCtx","useContext","className","classes","header","to","logo","onClick","Layout","ProfileForm","history","useHistory","newPasswordInputRef","useRef","form","onSubmit","event","preventDefault","enteredNewPassword","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","res","replace","control","htmlFor","type","id","minLength","ref","action","UserProfile","profile","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","isLoading","setIsLoading","auth","url","enteredEmail","enteredPassword","email","ok","json","data","Error","expiresIn","toISOString","catch","err","alert","message","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","Path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59233a64.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__2v6k0\",\"control\":\"AuthForm_control__3ZHSb\",\"actions\":\"AuthForm_actions__2AIuz\",\"toggle\":\"AuthForm_toggle__3MCvn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__1jtcb\",\"control\":\"ProfileForm_control__25Ott\",\"action\":\"ProfileForm_action__xpLHM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__J1iHT\",\"logo\":\"MainNavigation_logo__Mjsh4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__1Gmjq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__X_cPs\"};","import React, { useEffect, useCallback } from \"react\";\r\nimport { useState } from \"react/cjs/react.development\";\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = React.createContext({\r\n    token: '',\r\n    isLoggedIn : false,\r\n    login: (token) => {},\r\n    logout: () => {}\r\n});\r\n\r\n\r\nconst calculateRemainingTime = (expirationTime) => {\r\n\r\n    const currentTime = new Date().getTime();\r\n    const adjExprirationTime = new Date(expirationTime).getTime();\r\n\r\n    const remainingDurationTime = adjExprirationTime - currentTime;\r\n\r\n    return remainingDurationTime;\r\n};\r\n\r\nconst retrieveStoredToken = () => {\r\n    const stotedToken = localStorage.getItem('token');\r\n    const storedExpirationDate = localStorage.getItem('expirationTime');\r\n    \r\n    const remainingTime = calculateRemainingTime(storedExpirationDate);\r\n    if(remainingTime <= 3600){\r\n\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('expirationTime');\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        token : stotedToken,\r\n        duration : remainingTime\r\n    };\r\n\r\n};\r\n\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    const tokenData = retrieveStoredToken();\r\n    let initialToken;\r\n\r\n    if(tokenData){\r\n        initialToken = tokenData.token;\r\n    }\r\n\r\n    const [token,setToken] = useState(initialToken);\r\n\r\n    const userIsLoggedIn = !!token;\r\n\r\n    const logoutHandler = useCallback(() => {\r\n        setToken(null);\r\n        localStorage.removeItem('token');\r\n        if(logoutTimer){\r\n            clearInterval(logoutTimer);\r\n        }\r\n    },[]);\r\n\r\n    const loginHandler = (token, expirationTime) => {\r\n        setToken(token);\r\n        localStorage.setItem('token',token);\r\n        localStorage.setItem('expirationTime',expirationTime);\r\n        const remainingTime = calculateRemainingTime(expirationTime);\r\n\r\n        logoutTimer = setTimeout(logoutHandler, remainingTime);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n       if(tokenData){\r\n           console.log(tokenData.duration);\r\n           logoutTimer = setTimeout(logoutHandler,tokenData.duration);\r\n       }\r\n    },[tokenData,logoutHandler]);\r\n\r\n\r\n    const contextValue = {\r\n        token: token,\r\n        isLoggedIn:userIsLoggedIn,\r\n        login: loginHandler,\r\n        logout:logoutHandler\r\n    }\r\n    return <AuthContext.Provider value={contextValue}>{props.children}</AuthContext.Provider>;\r\n};\r\n\r\nexport default AuthContext;","import { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthContext from '../../store/auth-context';\n\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n  const authCtx = useContext(AuthContext);\n\n  const isLoggedIn = authCtx.isLoggedIn;\n\n  const logoutHandler = () => {\n    authCtx.logout();\n  }\n\n  return (\n    <header className={classes.header}>\n      <Link to='/'>\n        <div className={classes.logo}>React Auth</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn && (\n                 <li>\n                 <Link to='/auth'>Login</Link>\n               </li>\n          )}\n\n          {isLoggedIn && (\n               <li>\n               <Link to='/profile'>Profile</Link>\n             </li>\n          )}\n\n          {isLoggedIn && (\n                <li>\n                 <button onClick={logoutHandler}>Logout</button>\n               </li>\n          )}  \n         \n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useRef } from 'react';\nimport { useHistory } from 'react-router';\nimport { useContext } from 'react/cjs/react.development';\nimport AuthContext from '../../store/auth-context';\nimport classes from './ProfileForm.module.css';\n\nconst ProfileForm = () => {\n  const history = useHistory();\n  const newPasswordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n\n  const submitHandler = event  => {\n    event.preventDefault();\n\n    const enteredNewPassword = newPasswordInputRef.current.value;\n\n    fetch('https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyAGbvb-arg3Gcxzdq3euh_btQGD-bUwqjs',\n     { \n       method: 'POST',\n       body: JSON.stringify({\n        idToken: authCtx.token,\n        password: enteredNewPassword,\n        returnSecureToken: false\n       }),\n       headers:{\n        'Content-Type': 'application/json'\n       }\n    \n   }).then(res => {\n        history.replace('/');\n   });\n  }\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor='new-password'>New Password</label>\n        <input type='password' id='new-password' minLength=\"7\" ref={newPasswordInputRef}/>\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n}\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useRef, useState, useContext } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport classes from './AuthForm.module.css';\nimport { useHistory } from 'react-router-dom';\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const emailInputRef = useRef('');\n  const passwordInputRef = useRef('');\n\n const authCtx =  useContext(AuthContext);\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading,setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n     event.preventDefault();\n\n     const enteredEmail = emailInputRef.current.value;\n     const enteredPassword = passwordInputRef.current.value;\n     \n     setIsLoading(true);\n     let url;\n     if(isLogin){\n       url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAGbvb-arg3Gcxzdq3euh_btQGD-bUwqjs';\n     }else{\n        url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAGbvb-arg3Gcxzdq3euh_btQGD-bUwqjs';\n     }\n       fetch(url,\n       {\n          method:'POST',\n          body:JSON.stringify({\n          email:enteredEmail,\n          password:enteredPassword,\n          returnSecureToken:true\n         }),\n         headers:{\n          'Content-Type': 'application/json'\n         }\n       }).then(res => {\n         setIsLoading(false);\n          if(res.ok){\n              return res.json();\n          }else{\n           return res.json().then((data) => {\n                let errorMessage = 'Authentication failed';\n                // if(data && data.error && data.error.message){\n                //   errorMessage = data.error.message;\n                // }\n            \n                throw new Error(errorMessage);\n            });\n          }\n       }).then(data => {\n           const expirationTime = new Date(new Date().getTime() + ( +data.expiresIn * 1000));\n           authCtx.login(data.idToken,expirationTime.toISOString());\n           history.replace('/');\n       }).catch(err => {\n        alert(err.message);\n       });\n     };\n  \n\n\n  return (\n    <>\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' required ref={passwordInputRef}/>\n        </div>\n        <div className={classes.actions}>\n\n          {!isLoading && <button>{isLogin ? 'Login' : 'Create Account'}</button>}\n          {isLoading && <p>Loading...</p>}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n    </>\n  );\n  };\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { Switch, Route,Redirect } from 'react-router-dom';\nimport { useContext } from 'react/cjs/react.development';\n\nimport Layout from './components/Layout/Layout';\nimport UserProfile from './components/Profile/UserProfile';\nimport AuthPage from './pages/AuthPage';\nimport HomePage from './pages/HomePage';\nimport AuthContext from './store/auth-context';\n\nfunction App() {\n\n  const authCtx = useContext(AuthContext);\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/' exact>\n          <HomePage />\n        </Route>\n\n        {!authCtx.isLoggedIn && (<Route path='/auth'>\n          <AuthPage />\n        </Route>)}\n\n         \n        <Route path='/profile'>\n        {authCtx.isLoggedIn && <UserProfile />}\n        {!authCtx.isLoggedIn && <Redirect to='/auth'/>} \n        </Route>\n        \n        <Route Path='*'>\n            <Redirect to='/'/>\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { AuthContextProvider } from './store/auth-context';\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <AuthContextProvider>\n    <BrowserRouter>\n          <App />\n    </BrowserRouter>\n    </AuthContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}